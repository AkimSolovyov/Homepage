{
  "parser": "@typescript-eslint/parser",

  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:cypress/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "react-app",
    "prettier",
    "next",
    "next/core-web-vitals"
  ],
  "plugins": [
    "@typescript-eslint",
    "react",
    "import",
    "cypress",
    "formatjs"
  ],
  "rules": {
    "import/named": "off",
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          [
            "parent",
            "sibling",
            "index"
          ]
        ],
        "newlines-between": "always-and-inside-groups",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/newline-after-import": [
      "error",
      {
        "count": 1
      }
    ],
    "no-restricted-imports": [
      "error",
      {
        "patterns": [
          "./index"
        ]
      }
    ],
    "no-console": "error",
    "quotes": "off",
    "indent": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "typeParameter",
        "format": [
          "PascalCase"
        ],
        "prefix": [
          "T"
        ]
      },
      {
        "selector": "interface",
        "format": [
          "PascalCase"
        ],
        "custom": {
          "regex": "^I[A-Z]",
          "match": false
        }
      },
      {
        "selector": "memberLike",
        "modifiers": [
          "private"
        ],
        "format": [
          "camelCase",
          "UPPER_CASE"
        ],
        "leadingUnderscore": "require"
      },
      {
        "selector": "typeLike",
        "format": [
          "PascalCase"
        ]
      }
    ],
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/consistent-type-assertions": "off",
    "@typescript-eslint/no-unused-expressions": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "args": "none",
        "ignoreRestSiblings": false
      }
    ],
    "@typescript-eslint/member-delimiter-style": [
      2,
      {
        "multiline": {
          "delimiter": "none",
          "requireLast": false
        },
        "singleline": {
          "delimiter": "semi",
          "requireLast": false
        }
      }
    ],
    "@typescript-eslint/no-namespace": "off",
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          "Function": "Please provide a specific function type",
          "object": "Please consider using Record<string, unknown> instead",
          "Object": "Please consider using Record<string, unknown> instead"
        },
        "extendDefaults": false
      }
    ],
    "react/prop-types": "off",
    "react/display-name": "off",
    "react/jsx-boolean-value": [
      "error",
      "always"
    ],
    "react/jsx-curly-brace-presence": [
      "error",
      {
        "props": "never",
        "children": "never"
      }
    ],
    // suppress errors for missing 'import React' in files See:https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html#removing-unused-react-imports
    "react/react-in-jsx-scope": "off",
    // allow jsx syntax in js files (for next.js project)
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": ["ts", "tsx"]
      }
    ],
    "jsx-a11y/anchor-is-valid": [
      "error",
      {
        "components": ["Link"],
        "specialLink": ["to"]
      }
    ],
    "formatjs/enforce-description": ["error", "literal"],
    "@next/next/no-document-import-in-page": "off"
  },
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "env": {
    "browser": true,
    "jest": true
  },
  "globals": {
    "cy": "readonly",
    "Cypress": "readonly",
    "expect": "readonly",
    "assert": "readonly",
    "before": "readonly",
    "after": "readonly"
  }
}